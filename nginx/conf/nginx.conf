events {
    worker_connections 1024;
}

http {
    limit_req_zone $binary_remote_addr zone=mylimit:20m rate=10r/s; #r/s = requisições por segundo e m = MB de memória
    limit_conn_zone $binary_remote_addr zone=myconnlimit:20m; #m = MB de memória

    server {
        listen 80 default_server;
        server_name _;

        # Redireciona todas as solicitações HTTP para HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost; #mudar para host dominio.com

        ssl_certificate "/site/scrap_PoE/certificate/server-cert.pem";
        ssl_certificate_key "/site/scrap_PoE/certificate/server-key.pem";
        ssl_password_file "/site/scrap_PoE/certificate/ssl_password.txt";

        # Bloqueia acesso direto por IP
        if ($host = $server_addr) {
            return 301 https://$server_name$request_uri;
        }

        # Encaminha as solicitações para o servidor de destino
        location / {
            limit_req zone=mylimit burst=1000 nodelay; # limite de requisições maximas de pico, necessario para carregar site sem levar block
            limit_conn myconnlimit 4; # conexões simultâneas
            proxy_pass https://localhost:3001; #mudar para host e porta do servico do node seguro
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_read_timeout 30s;
        }
    }
}